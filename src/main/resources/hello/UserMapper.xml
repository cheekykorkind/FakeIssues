<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.UserMapper">
  <select id="findByUsername" parameterType="String" resultType="hello.Member">
    SELECT * FROM user WHERE username = #{username}
  </select>

  <select id="readAuthority" parameterType="String" resultType="String">
    SELECT authority_name FROM authority WHERE username = #{username}
  </select>

  <select id="length" resultType="long">
    SELECT COUNT(*) 
    FROM user
  </select>
 

  <insert id="create" parameterType="hello.Member">
    INSERT INTO user(username, password, name, isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled)
    VALUES(#{username}, #{password}, #{name}, #{isAccountNonExpired}, #{isAccountNonLocked}, #{isCredentialsNonExpired}, #{isEnabled})
  </insert>
  <delete id="delete" parameterType="long">
    DELETE FROM user WHERE id = #{id}
  </delete>

  <select id="lastId" resultType="long">
    SELECT MAX(id) FROM user
  </select>

  <insert id="createManyIssues" parameterType="java.util.List">
    INSERT INTO issues (title, content, userId)
    VALUES

    <!-- sql mapper에서 foreach는 collection의 rhs값은 list로 고정, item의 rhs값은 자유롭게 설정 가능하다 -->
    <foreach item="issue" collection="list" open="(" separator="),(" close=")">
      #{issue.title}, #{issue.content}, #{issue.userId}
    </foreach>
  </insert>

  <!-- select -->
  <select id="findById" resultType="hello.Member">
    SELECT *
    FROM user
    WHERE id = #{id}
  </select>

  <!-- hasMany update : user가 1 issues가 n -->
  <update id="updateManyIssues" parameterType="hello.Member">
    UPDATE
      user as U 
        INNER JOIN
          issues as I
    ON
      U.id = I.userId
    SET
      I.title = 
        CASE
          <foreach collection="issues" item="issue">
            WHEN I.id = #{issue.id} THEN #{issue.title}
          </foreach>
        END,
      I.content = 
        CASE
          <foreach collection="issues" item="issue">
            WHEN I.id = #{issue.id} THEN #{issue.content}
          </foreach>
        END
    WHERE
      I.userId = #{id}
  </update>

  <!-- hasMany select : user가 1 issues가 n -->
  <select id="findIssuesByUserId" resultMap="findIssuesByUserIdResultMap">
    select
      U.id,
      I.id as i_id,
      I.title as i_title,
      I.content as i_content,
      I.userId as i_userId
    from
      user as U
        INNER JOIN
          issues as I
        ON
          U.id = I.userId
    where
      I.userId = #{userId}
  </select>

  <resultMap type="hello.Member" id="findIssuesByUserIdResultMap">
    <id property="id" column="id" />

    <collection property="issues" ofType="hello.Issue">
      <result property="id" column="i_id"/>
      <result property="title" column="i_title"/>
      <result property="content" column="i_content"/>
      <result property="userId" column="i_userId"/>
    </collection>
  </resultMap>


  <delete id="deleteManyIssues" parameterType="long">
    DELETE
      U, I
    FROM
      user AS U
    LEFT JOIN
      issues AS I
    ON U.id = I.userId
      WHERE U.id = #{userId};
  </delete>
</mapper>